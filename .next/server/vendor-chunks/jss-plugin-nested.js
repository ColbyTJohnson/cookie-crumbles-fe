"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/jss-plugin-nested";
exports.ids = ["vendor-chunks/jss-plugin-nested"];
exports.modules = {

/***/ "(ssr)/./node_modules/jss-plugin-nested/dist/jss-plugin-nested.esm.js":
/*!**********************************************************************!*\
  !*** ./node_modules/jss-plugin-nested/dist/jss-plugin-nested.esm.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ \"(ssr)/./node_modules/@babel/runtime/helpers/esm/extends.js\");\n/* harmony import */ var tiny_warning__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tiny-warning */ \"(ssr)/./node_modules/tiny-warning/dist/tiny-warning.esm.js\");\n\n\nvar separatorRegExp = /\\s*,\\s*/g;\nvar parentRegExp = /&/g;\nvar refRegExp = /\\$([\\w-]+)/g;\n/**\n * Convert nested rules to separate, remove them from original styles.\n */ function jssNested() {\n    // Get a function to be used for $ref replacement.\n    function getReplaceRef(container, sheet) {\n        return function(match, key) {\n            var rule = container.getRule(key) || sheet && sheet.getRule(key);\n            if (rule) {\n                return rule.selector;\n            }\n             true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(false, '[JSS] Could not find the referenced rule \"' + key + '\" in \"' + (container.options.meta || container.toString()) + '\".') : 0;\n            return key;\n        };\n    }\n    function replaceParentRefs(nestedProp, parentProp) {\n        var parentSelectors = parentProp.split(separatorRegExp);\n        var nestedSelectors = nestedProp.split(separatorRegExp);\n        var result = \"\";\n        for(var i = 0; i < parentSelectors.length; i++){\n            var parent = parentSelectors[i];\n            for(var j = 0; j < nestedSelectors.length; j++){\n                var nested = nestedSelectors[j];\n                if (result) result += \", \"; // Replace all & by the parent or prefix & with the parent.\n                result += nested.indexOf(\"&\") !== -1 ? nested.replace(parentRegExp, parent) : parent + \" \" + nested;\n            }\n        }\n        return result;\n    }\n    function getOptions(rule, container, prevOptions) {\n        // Options has been already created, now we only increase index.\n        if (prevOptions) return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({}, prevOptions, {\n            index: prevOptions.index + 1\n        });\n        var nestingLevel = rule.options.nestingLevel;\n        nestingLevel = nestingLevel === undefined ? 1 : nestingLevel + 1;\n        var options = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({}, rule.options, {\n            nestingLevel: nestingLevel,\n            index: container.indexOf(rule) + 1 // We don't need the parent name to be set options for chlid.\n        });\n        delete options.name;\n        return options;\n    }\n    function onProcessStyle(style, rule, sheet) {\n        if (rule.type !== \"style\") return style;\n        var styleRule = rule;\n        var container = styleRule.options.parent;\n        var options;\n        var replaceRef;\n        for(var prop in style){\n            var isNested = prop.indexOf(\"&\") !== -1;\n            var isNestedConditional = prop[0] === \"@\";\n            if (!isNested && !isNestedConditional) continue;\n            options = getOptions(styleRule, container, options);\n            if (isNested) {\n                var selector = replaceParentRefs(prop, styleRule.selector); // Lazily create the ref replacer function just once for\n                // all nested rules within the sheet.\n                if (!replaceRef) replaceRef = getReplaceRef(container, sheet); // Replace all $refs.\n                selector = selector.replace(refRegExp, replaceRef);\n                var name = styleRule.key + \"-\" + prop;\n                if (\"replaceRule\" in container) {\n                    // for backward compatibility\n                    container.replaceRule(name, style[prop], (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({}, options, {\n                        selector: selector\n                    }));\n                } else {\n                    container.addRule(name, style[prop], (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({}, options, {\n                        selector: selector\n                    }));\n                }\n            } else if (isNestedConditional) {\n                // Place conditional right after the parent rule to ensure right ordering.\n                container.addRule(prop, {}, options).addRule(styleRule.key, style[prop], {\n                    selector: styleRule.selector\n                });\n            }\n            delete style[prop];\n        }\n        return style;\n    }\n    return {\n        onProcessStyle: onProcessStyle\n    };\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (jssNested);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/jss-plugin-nested/dist/jss-plugin-nested.esm.js\n");

/***/ })

};
;